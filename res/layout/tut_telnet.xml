<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="fill_parent"
              android:layout_height="fill_parent"
              android:layout_weight="1"
              android:orientation="vertical" >

    <TextView android:id="@+id/help_title"
                  android:gravity="center"
                  android:layout_width="fill_parent"
                  android:layout_height="wrap_content"
                  android:paddingTop="10dip"
                  android:paddingBottom="10dip"
                  android:textSize="22dip"
                  android:text="Remote Access"/>

    <ScrollView android:id="@+id/help_scrollview"
                android:layout_height="fill_parent"
                android:layout_width="fill_parent">

    <TextView android:id="@+id/mixer_deck1_text"
                  android:layout_width="fill_parent"
                  android:layout_height="fill_parent"
                  android:text=
"This is the MOST important feature of Terminal IDE.\n
\n
Being able to log in over telnet/ssh with a large fully compatible keyboard and even larger
monitor is what makes Terminal IDE so useable.\n
\n
How to login via TELNET\n
--------------------\n
\n
A typical session will entail you starting Terminal IDE and simply running
'telnetd'. No options required as defaults are used.\n
\n
Then log in via your secure home wifi with telnet, default port 8080.If you are an
android developer and have adb installed, there is a better option.\n
\n
Plug your phone in via usb and make sure adb can see it. Then run\n
\n
adb -d forward tcp:8080 tcp:8080\n
\n
This will forward the local port 8080 to the device port 8080\n
\n
Then log in via telnet, via your local machine. Simple.\n
\n
telnet -e '' 127.0.0.1 8080\n
\n
Since there is no encryption, like ssh, and over USB, this is the fastest possible connection..\n
\n
Using the -e '' turns off the escape character, which is the same as the default
vim help link follow throught key. Set it to whatever you want.\n
\n
Once you have logged on make sure the TERM variable is correct, The default is 'xterm'.\n
\n
There is a full httpd daemon courtesy of busybox, and also sshd and ssh courtesy of DropBear. \n
\n
How to login via SSH\n
--------------------\n
\n
There is a slight issue.. basically when you log in you have to start bash manually.. unless you have the file /etc/shell with the correct shell to use.. Which requires a rooted phone.\n
\n
Since Terminal IDE is for non-ROOT users, I will have to recompile the code to allow a shell to be specified on the command line.. Soon..\n
\n
FOR NOW - This is how to connect to the phone via SSH (There are other ways using public keys but this is one way)\n
\n
So - Once in Terminal IDE\n
\n
2) You need to create a couple of server ssh keys\n
\n
Start in $HOME\n
# cd ~\n
\n
Create folder\n
# mkdir .ssh\n
\n
Give it some secure permissions\n
# chmod 700 .ssh\n
\n
Get in there\n
# cd .ssh\n
\n
Now create the keys\n
# dropbearkey -t dss -f dropbear_dss_host_key\n
# dropbearkey -t rsa -f dropbear_rsa_host_key\n
\n
ok - That's almost it. Just need to start dropbear with the correct parameters now. [Probably want to keep this in a script]\n
\n
Back HOME\n
# cd ~\n
\n
You need to know the UID of your app, which is different per phone - use 'id'\n
# id\n
\n
That will tell you your user ID / Group ID. Let's say its 10058.\n
\n
Now to start DropBear\n
# dropbear -A -N username -U 10058 -G 10058 -C password -d ~/.ssh/dropbear_dss_host_key -r ~/.ssh/dropbear_rsa_host_key -F -E -p 8090 -P PidFile\n
\n
This will start it running in the foreground with password set to 'password' on port 8090.\n
\n
Then you can connect, like telnet, and simply use 'password' for the password.\n
\n
Now for the issue. It will start a simple shell session in / with no ENVIRONMENT variables or anything..\n
\n
I'll fix it permanently in a future release, but for now it can be fixed with these 2 commands.\n
\n
cd into your home dir - Check this is correct on your device\n
# cd /data/data/com.spartacusrex.spartacuside/files\n
\n
And start bash with an init file Terminal IDE auto-magically creates..\n
# ./system/bin/bash --init-file ./.init\n
\n
Everything should now be setup as usual.\n
\n
Good luck..\n
" />

</ScrollView>

</LinearLayout>
